{"ast":null,"code":"import _classCallCheck from \"/home/sterbon/Desktop/FoodSCM/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sterbon/Desktop/FoodSCM/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sterbon/Desktop/FoodSCM/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sterbon/Desktop/FoodSCM/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sterbon/Desktop/FoodSCM/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sterbon/Desktop/FoodSCM/src/pages/home/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Col, Row, Button } from 'antd';\nimport { requestLogin, fetchWallet, logout, sendTokens } from '../../scatter/scatter_actions';\n\nvar IPFS = require('ipfs-api'); // import UserWallet from \"../../components/user_wallet\";\n// import SendTokens from \"../../components/send_tokens\";\n// import UserAccount from \"../../components/user_account\";\n\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n\n    _this.loginUser = function () {\n      return _this.props.dispatch(requestLogin());\n    };\n\n    _this.sendTokens = function (_ref) {\n      var toAccount = _ref.toAccount,\n          amount = _ref.amount,\n          memo = _ref.memo;\n\n      _this.props.dispatch(sendTokens({\n        toAccount: toAccount,\n        amount: amount,\n        memo: memo\n      }));\n    };\n\n    _this.logOutUser = function () {\n      return _this.props.dispatch(logout());\n    };\n\n    _this.state = {\n      scatterConnected: false,\n      requestedAuth: false,\n      connectingScatter: false,\n      requestedTransaction: false,\n      connectedNetworkName: null,\n      pname: null,\n      price: null,\n      // account details\n      loggedIn: false,\n      userAccount: {\n        name: null,\n        publicKey: null,\n        keyType: null\n      },\n      userWallet: {}\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"uploadData\",\n    value: function uploadData() {\n      var ipfs = new IPFS({\n        host: 'ipfs.infura.io',\n        port: 5001,\n        protocol: 'https'\n      }); // const ipfs = new IPFS.create()\n\n      var _this$state = this.state,\n          pname = _this$state.pname,\n          price = _this$state.price;\n      var data = {\n        pname: pname,\n        price: price\n      };\n      console.log('data', data);\n      var buf = Buffer.from(JSON.stringify(data));\n      console.log('Buffer', buf);\n      console.time();\n      ipfs.files.add(buf, function (error, result) {\n        if (error) {\n          console.error(error);\n          console.log(\"err\");\n          return;\n        }\n\n        console.log(\"Image Hash:\", result[0].hash);\n        console.timeEnd();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$scatter = this.props.scatter,\n          userAccount = _this$props$scatter.userAccount,\n          loggedIn = _this$props$scatter.loggedIn,\n          userWallet = _this$props$scatter.userWallet;\n      var loginUser = this.loginUser,\n          sendTokens = this.sendTokens,\n          logOutUser = this.logOutUser;\n      return React.createElement(\"div\", {\n        id: \"homepage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(React.Fragment, null, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          margin: \"10px\"\n        },\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, loggedIn ? React.createElement(Button, {\n        htmlType: \"button\",\n        onClick: logOutUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Log out\") : React.createElement(Button, {\n        htmlType: \"button\",\n        onClick: loginUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Log in\")))), loggedIn && React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Product Name:\"), React.createElement(\"input\", {\n        id: \"pro\",\n        value: this.state.pname,\n        onChange: function onChange(e) {\n          _this2.setState({\n            pname: e.target.value\n          });\n        },\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Price:\"), React.createElement(\"input\", {\n        id: \"price\",\n        value: this.state.price,\n        onChange: function onChange(e) {\n          _this2.setState({\n            price: e.target.value\n          });\n        },\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.uploadData.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Get Hash\"))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props) {\n      var hasWalletOrError = props.scatter.userWallet || props.scatter.walletError,\n          shouldFetchWallet = props.scatter.loggedIn && !(hasWalletOrError || props.scatter.fetchingWallet);\n      shouldFetchWallet && props.dispatch(fetchWallet());\n      return null;\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref2) {\n  var scatter = _ref2.scatter;\n  return {\n    scatter: scatter\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    dispatch: dispatch\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/home/sterbon/Desktop/FoodSCM/src/pages/home/index.js"],"names":["React","Component","connect","Card","Col","Row","Button","requestLogin","fetchWallet","logout","sendTokens","IPFS","require","Home","props","loginUser","dispatch","toAccount","amount","memo","logOutUser","state","scatterConnected","requestedAuth","connectingScatter","requestedTransaction","connectedNetworkName","pname","price","loggedIn","userAccount","name","publicKey","keyType","userWallet","ipfs","host","port","protocol","data","console","log","buf","Buffer","from","JSON","stringify","time","files","add","error","result","hash","timeEnd","scatter","margin","e","setState","target","value","uploadData","bind","hasWalletOrError","walletError","shouldFetchWallet","fetchingWallet","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Col, Row, Button } from 'antd';\n\nimport {\n    requestLogin,\n    fetchWallet,\n    logout,\n    sendTokens\n} from '../../scatter/scatter_actions';\n\nconst IPFS = require('ipfs-api');\n\n// import UserWallet from \"../../components/user_wallet\";\n// import SendTokens from \"../../components/send_tokens\";\n// import UserAccount from \"../../components/user_account\";\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            scatterConnected: false,\n            requestedAuth: false,\n            connectingScatter: false,\n            requestedTransaction: false,\n            connectedNetworkName: null,\n            pname: null,\n            price: null,\n            // account details\n            loggedIn: false,\n            userAccount: {\n                name: null,\n                publicKey: null,\n                keyType: null,\n            },\n            userWallet: {}\n        };\n\n    };\n\n    loginUser = () => this.props.dispatch(requestLogin());\n\n    static getDerivedStateFromProps(props) {\n        const\n            hasWalletOrError = props.scatter.userWallet || props.scatter.walletError,\n            shouldFetchWallet = props.scatter.loggedIn && !(hasWalletOrError || props.scatter.fetchingWallet);\n\n        shouldFetchWallet && props.dispatch(fetchWallet());\n        return null;\n    }\n\n    sendTokens = ({ toAccount, amount, memo }) => {\n        this.props.dispatch(sendTokens({ toAccount, amount, memo }))\n    };\n\n    logOutUser = () => this.props.dispatch(logout());\n\n\n    uploadData() {\n        const ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n        // const ipfs = new IPFS.create()\n        const {pname, price} = this.state;      \n        const data = { pname, price };\n\n        console.log('data',data)\n        var buf = Buffer.from(JSON.stringify(data));\n        console.log('Buffer', buf)\n\n        console.time()\n        ipfs.files.add(buf, (error, result) => {\n            if (error) {\n                console.error(error)\n                console.log(\"err\")\n                return\n            }\n            console.log(\"Image Hash:\", result[0].hash)\n            console.timeEnd()\n\n        })\n    }\n\n    render() {\n        const { userAccount, loggedIn, userWallet } = this.props.scatter;\n\n        const {\n            loginUser,\n            sendTokens,\n            logOutUser\n        } = this;\n\n        return (\n            <div id=\"homepage\"><>\n                <Row>\n                    <Col span={24}>\n                        <Card style={{ margin: \"10px\" }} bordered={true}>\n                            {loggedIn ? <Button htmlType=\"button\" onClick={logOutUser}>Log out</Button> : <Button htmlType=\"button\" onClick={loginUser}>Log in</Button>}\n                        </Card>\n                    </Col>\n                </Row>\n\n                {loggedIn && <>\n                    <form>\n                        <label>\n                            Product Name:\n                        </label>\n                        <input id='pro' value={this.state.pname} onChange={(e) => { this.setState({ pname : e.target.value }); }} type='text'></input>\n\n                        <label>\n                            Price:\n                        </label>\n                        <input id='price' value={this.state.price} onChange={(e) => { this.setState({ price : e.target.value }); }} type='text'></input>\n                    </form>\n                    <button onClick={this.uploadData.bind(this)}>Get Hash</button>\n                </>}\n            </></div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ scatter }) => {\n    return {\n        scatter,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return { dispatch };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);"]},"metadata":{},"sourceType":"module"}